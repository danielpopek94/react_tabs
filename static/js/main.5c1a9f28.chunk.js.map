{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","id","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","hasClassName","className","map","href","onClick","title","content","App","useState","setSelectedTabId","getCurrentTitle","ReactDOM","render","document","getElementById"],"mappings":"iMAQaA,EAAO,SAAC,GAAuD,IACjDC,EADJC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,cAAeC,EAA+B,EAA/BA,cAKpCC,GAJmBJ,EAIWE,EAHlCD,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIN,KAAOA,MAAOC,EAAK,IAKpCM,EAAe,SAACD,GAAD,OACnBF,EAAYJ,KAAOM,EAAIN,GAAK,YAAc,IAG5C,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKQ,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,GAAD,OACR,oBAAIE,UAAWD,EAAaD,GAAM,UAAQ,MAA1C,SACE,mBACEI,KAAI,WAAMJ,EAAIN,IACd,UAAQ,UACRW,QAAS,kBACPL,EAAIN,KAAOE,GAAiBC,EAAcG,IAJ9C,SAOGA,EAAIM,SAR4CN,EAAIN,WAe/D,qBAAKQ,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYS,cCjCRZ,EAAO,CAClB,CAAED,GAAI,QAASY,MAAO,QAASC,QAAS,eACxC,CAAEb,GAAI,QAASY,MAAO,QAASC,QAAS,eACxC,CAAEb,GAAI,QAASY,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASd,EAAK,GAAGD,IAA3D,mBAAOE,EAAP,KAAsBc,EAAtB,KAUA,OACE,sBAAKR,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCANoB,kCACtBP,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIN,KAAOE,YADN,aACtB,EAA4CU,MAMpBK,MAGtB,cAAC,EAAD,CACEhB,KAAMA,EACNC,cAAeA,EACfC,cAjBgB,WAAyB,IAAxBG,EAAuB,uDAAZL,EAAK,GACrCe,EAAiBV,EAAIN,WCdzBkB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5c1a9f28.chunk.js","sourcesContent":["import Tab from '../../types/Tab';\n\ninterface TabsProps {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n}\n\nexport const Tabs = ({ tabs, selectedTabId, onTabSelected }: TabsProps) => {\n  const findSelectedTab = (id: string): Tab => (\n    tabs.find(tab => tab.id === id) || tabs[0]\n  );\n\n  const selectedTab = findSelectedTab(selectedTabId);\n\n  const hasClassName = (tab: Tab) => (\n    selectedTab.id === tab.id ? 'is-active' : ''\n  );\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <li className={hasClassName(tab)} data-cy=\"Tab\" key={tab.id}>\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => (\n                  tab.id !== selectedTabId && onTabSelected(tab)\n                )}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\nimport Tab from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const onTabSelected = (tab: Tab = tabs[0]) => {\n    setSelectedTabId(tab.id);\n  };\n\n  const getCurrentTitle = () => (\n    tabs.find(tab => tab.id === selectedTabId)?.title\n  );\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${getCurrentTitle()}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}